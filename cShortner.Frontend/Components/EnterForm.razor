@inject IUrlShortnerService _urlShortnerService
@rendermode InteractiveServer

<div class="container mt-5">
    <h3 class="text-center mb-4">Enter URL</h3>

    <EditForm Model="@Input" OnSubmit="Submit">
        <div class="mb-3">
            <label for="urlInput" class="form-label">Enter URL:</label>
            <InputText @bind-Value="Input.Input" id="urlInput" class="form-control"
                placeholder="Enter the URL to shorten" />
            @if (isUrlValid == false)
            {
                <div class="text-danger mt-2">Please enter a valid URL.</div>
            }
        </div>

        <div class="d-flex justify-content-center">
            <button type="submit" class="btn btn-primary btn-lg">Submit</button>
        </div>
    </EditForm>

    @if (!string.IsNullOrEmpty(NewUrl))
    {
        <div class="alert alert-success mt-3" role="alert">
            <strong>Success!</strong> Your new shortened URL is:
            <a href="@NewUrl" target="_blank" class="alert-link">@NewUrl</a>
        </div>
    }
</div>

@code {
    private InputUrl? Input = new InputUrl();
    private string NewUrl { get; set; } = string.Empty;
    private bool isUrlValid { get; set; } = true;

    private void Submit()
    {
        if (Uri.TryCreate(Input?.Input, UriKind.Absolute, out var uriResult) && (uriResult.Scheme == Uri.UriSchemeHttp ||
        uriResult.Scheme == Uri.UriSchemeHttps))
        {
            NewUrl = _urlShortnerService.Add(Input.Input);
            Input.Input = string.Empty;
            isUrlValid = true;
        }
        else
        {
            isUrlValid = false;
            NewUrl = string.Empty;
        }
    }
}
